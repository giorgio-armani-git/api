<<<<<<< HEAD
openapi: "3.0.0"
info:
  title: Digital Assets API
  description: Digital Assets API exposes the method to retrieve different types of digital assets
  version: "1.0.0"
servers:
  - url: '{protocol}://{environment}.gateway.webmethodscloud.de/gateway/digital-assets/v1'
    variables:
      protocol:
        enum:
          - https
        default: https
      environment:
        default: apiarmani    # Production server
        enum:
          - apiarmani      # Production server
          - apiarmanidev   # Development server

paths:
  /media-items:
    get:
      description: Return URLs of media items for the specified item-id, i.e. images and / or video
      parameters:
        - name: style
          in: query
          description: ID of the style of the item the query refers to
          required: true
          schema:
            $ref: "#/components/schemas/style"
        - name: fabric
          in: query
          description: ID of the fabric of the item the query refers to
          required: true
          schema:
            $ref: "#/components/schemas/fabric"
        - name: color
          in: query
          description: ID of the color of the item the query refers to
          required: true
          schema: 
            $ref: "#/components/schemas/color"
        - name: brand
          in: query
          description: ID of the brand the query refers to
          required: false
          schema:
            $ref: "#/components/schemas/brand"
        - name: category
          in: query
          description: Requester of the image (sales, web, social media)
          required: false
          schema:
            $ref: "#/components/schemas/category"
        - name: classification
          in: query
          description: The classification of the content, i.e. the views (main,front,side,back etc. )
          required: false
          explode: true
          schema:
            $ref: "#/components/schemas/classification"
        - name: size
          in: query
          description: The resolution of the image ("300", "600", "1200")
          required: false
          schema:
            $ref: "#/components/schemas/resolution"
        - name: season
          in: query
          description: The season the query refers to
          required: false
          schema:
            $ref: "#/components/schemas/season"
        - name: transaction-id
          in: header
          description: unique identifier of the transaction to be propagated to downstream servers, if not included by the Application calling the API it will be generated by the API Gateway
          required: false
          schema:
            type: string
            format: uuid
        - name: x-Gateway-APIKey
          in: header
          description: API Key assigned to the Application calling the API
          required: true
          schema:
            type: string
            
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/multi-items-digital-assets"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "405":
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/error"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
                
  /sketches:
    get:
      description: Return URLs of sketch(es) specified by the mandatory style query parameter
      parameters:
        - name: style
          in: query
          description: ID of the style of the item the query refers to
          required: true
          schema:
            $ref: "#/components/schemas/style"
        - name: fabric
          in: query
          description: ID of the fabric of the item the query refers to
          required: false
          schema:
            $ref: "#/components/schemas/fabric"
        - name: color
          in: query
          description: ID of the color of the item the query refers to
          required: false
          schema:
            $ref: "#/components/schemas/color" 
        - name: size
          in: query
          description: The resolution of the image ("300", "600", "1200")
          required: false
          schema:
            $ref: "#/components/schemas/resolution"
        - name: transaction-id
          in: header
          description: unique identifier of the transaction to be propagated to downstream servers, if not included by the Application calling the API it will be generated by the API Gateway
          required: false
          schema:
            type: string
            format: uuid
        - name: x-Gateway-APIKey
          in: header
          description: API Key assigned to the Application calling the API
          required: true
          schema:
            type: string
            
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/multi-items-sketches-digital-assets"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "405":
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/error"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
                
  /swatches:
    get:
      description: Return URLs of sketch(es) specified by the mandatory style query parameter
      parameters:
        - name: style
          in: query
          description: ID of the style of the item the query refers to
          required: true
          schema:
            $ref: "#/components/schemas/style"
        - name: fabric
          in: query
          description: ID of the fabric of the item the query refers to
          required: true
          schema:
            $ref: "#/components/schemas/fabric"
        - name: color
          in: query
          description: ID of the color of the item the query refers to
          required: true
          schema: 
            $ref: "#/components/schemas/color"
        - name: brand
          in: query
          description: The brand the query refers to
          required: false
          schema:
            $ref: "#/components/schemas/brand"
        - name: category
          in: query
          description: The category the query refers to
          required: false
          schema:
            $ref: "#/components/schemas/category"
        - name: classification
          in: query
          description: The classification the query refers to
          required: false
          schema:
            $ref: "#/components/schemas/classification"
        - name: season
          in: query
          description: The season the query refers to
          required: false
          schema:
            $ref: "#/components/schemas/season"
        - name: size
          in: query
          description: The resolution of the image ("300", "600", "1200")
          required: false
          schema:
            $ref: "#/components/schemas/resolution"
        - name: transaction-id
          in: header
          description: unique identifier of the transaction to be propagated to downstream servers, if not included by the Application calling the API it will be generated by the API Gateway
          required: false
          schema:
            type: string
            format: uuid
        - name: x-Gateway-APIKey
          in: header
          description: API Key assigned to the Application calling the API
          required: true
          schema:
            type: string
        - name: x-Orig-App-Name
          in: header
          description: the name of the API Consumer APP as defined in AXL
          required: false
          schema:
            type: string
        - name: x-Context-Check
          in: header
          description: header carrying boolean to control if required the backend business logic
          required: false
          schema:
            type: boolean
          example: true
            
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/multi-items-swatches-digital-assets"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "405":
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/error"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
                    
security:
  - api-key-auth: []

components:

  securitySchemes:
    api-key-auth:
      type: apiKey
      in: header
      name: x-Gateway-APIKey

  schemas:
      
    bulk-retrieve-response:
      type: object
      required:
        - task-id
      properties:
        task-id:
          description: Unique identifier of the background asynchronous task (assigned by the backend system)
          type: string
          
    multi-items-digital-assets:
      description: add here the description
      type: array
      items:
        $ref: "#/components/schemas/digital-assets"
        
    multi-items-sketches-digital-assets:
      description: add here the description
      type: array
      items:
        $ref: "#/components/schemas/sketches-digital-assets"
        
    multi-items-swatches-digital-assets:
      description: add here the description
      type: array
      items:
        $ref: "#/components/schemas/swatches-digital-assets"
        
    sketches-digital-assets:
      type: object
      description: object encapsulating properties of the digitial asset
      required:
        - item-id-type
        - item-id
        - href
        - brand
        - gender
        - assets
      properties:
        item-id-type:
          description: type of item identifier (generic, sku, style)
          type: string
          example: "SFC"
        item-id:
          description: Unique identifier of the sketch
          type: string
          example: "2WHGK03H"
        style:
          description: The identifier of the style
          type: string
        fabric:
          description: The identifier of the fabric
          type: string
        color:
          description: The identifier of the color
          type: string
        brand:
          $ref: "#/components/schemas/brand"
        gender:
          description: Gender the product item refers to
          type: string
          example: "M"
        category:
          $ref: "#/components/schemas/category"
        count:
          description: Number of assets returned
          type: integer
          example: 1
        assets:
          description: Array of objets carrying the digital assets corresponding to the item
          type: array
          items:
            $ref: "#/components/schemas/sketches-assets"
            
    swatches-digital-assets:
      type: object
      description: object encapsulating properties of the digitial asset
      required:
        - item-id-type
        - item-id
        - href
        - brand
        - gender
        - assets
      properties:
        item-id-type:
          description: type of item identifier (generic, sku, style)
          type: string
          example: "SFC"
        item-id:
          description: Identifier of the item the swatch refers to
          type: string
          example: "Y4R173_Y068E_85726"
        style:
          description: The identifier of the style
          type: string
        fabric:
          description: The identifier of the fabric
          type: string
        color:
          description: The identifier of the color
          type: string
        brand:
          $ref: "#/components/schemas/brand"
        gender:
          description: Gender the product item refers to
          type: string
          example: "M"
        category:
          $ref: "#/components/schemas/category"
        count:
          description: Number of assets returned
          type: integer
          example: 1
        assets:
          description: Array of objets carrying the digital assets corresponding to the item
          type: array
          items:
            $ref: "#/components/schemas/swatches-assets"
            
    digital-assets:
      type: object
      description: object encapsulating properties of the digitial asset
      required:
        - item-id-type
        - item-id
        - href
        - brand
        - gender
        - assets
      properties:
        item-id-type:
          description: type of item identifier (generic, sku, style-fabric-color)
          type: string
          enum:
            - "SFC"
            - "SKU"
          example: "SFC"
        item-id:
          description: Unique identifier of the item (if item-id-type is SFC item-id is style_fabric_color)
          type: string
          example: "2WHGK03H_T01QW_UC99"
        style:
          description: The identifier of the style
          type: string
        fabric:
          description: The identifier of the fabric
          type: string
        color:
          description: The identifier of the color
          type: string
        brand:
          $ref: "#/components/schemas/brand"
        gender:
          description: Gender the product item refers to
          type: string
          example: "M"
        category:
          $ref: "#/components/schemas/category"
        classification:
          $ref: "#/components/schemas/classification"
        resolution:
          $ref: "#/components/schemas/resolution"
        count:
          description: Number of assets returned
          type: integer
          example: 1
        assets:
          description: Array of objets carrying the digital assets corresponding to the item
          type: array
          items:
            $ref: "#/components/schemas/assets"
        related-items:
          $ref: "#/components/schemas/related-items"
       
    
    related-items:
      type: object
      properties:
        sketches:
          type: array
          items:
            $ref: "#/components/schemas/sketch"
        swatches:
          type: array
          items:
            $ref: "#/components/schemas/swatch"
    
    sketch:
      type: object
      properties:
        id:
          type: string
          example: "3R2A6B"
        resolution:
          $ref: "#/components/schemas/resolution"
        size:
          description: The size in bytes of the sketch asset
          type: integer
          example: 345667
        url:
          description: The URL of the sketch asset
          type: string
          format: uri
          example: "https://dam.armani.it/asset/transform.GAMIPIC-Y4R173-S.600.jpg"
        href:
          type: string
          format: uri
          example: "https://apiarmanidev.gateway.webmethodscloud.de/gateway/digital-assets/v1/sketches?Y4R173&size=600"
        creation-date:
          type: string
          format: date-time
        last-change-date:
          type: string
          format: date-time
          
    swatch:
      type: object
      properties:
        id:
          type: string
          example: "Y068E_85726"
        resolution:
          $ref: "#/components/schemas/resolution"
        size:
          description: The size in bytes of the sketch asset
          type: integer
          example: 345667
        url:
          description: The URL of the sketch asset
          type: string
          format: uri
          example: "https://dam.armani.it/asset/transform.GAMIPIC-Y068E_85726-T.600.jpg"
        href:
          type: string
          format: uri
          example: "https://apiarmanidev.gateway.webmethodscloud.de/gateway/digital-assets/v1/swatches?style=Y4R173&fabric=Y068E&color=85726&size=600"
        creation-date:
          type: string
          format: date-time
        last-change-date:
          type: string
          format: date-time  
    
    category:
      type: string
      enum:
        - sales
        - web
        - social
        - general
        - all
      example: web
      
    season:
      type: string
      example: "FW2022"

    asset-type:
      type: string
      enum:
        - image
        - video
        - 3d
        - swatch
        - sketch

    assets:
      type: object
      properties:
        asset-type:
          allOf:
            - $ref: "#/components/schemas/asset-type"
          example: image
        asset-category:
          $ref: "#/components/schemas/category"
        asset-classification:
          $ref: "#/components/schemas/classification"
        season:
          description: Season the product item belongs to
          type: string
          example: "SS2020"
        mime-type:
          type: string
          enum:
          - image/png
          - image/jpeg
          - image/jpg
          - video/mp4
          - video/H263
          - video/H264
          - video/H265
        resolution:
          $ref: "#/components/schemas/resolution"
        media-width:
          type: string
          example: "640px"
        media-height:
          type: string
          example: "640px" 
        size:
          description: The size of the digital asset in bytes
          type: integer
          example: 543145
        url:
          type: string
          format: uri
          example: "https://dam.armani.it/asset/transform.EcomAr-8NAMA5_AMB5Z_UBSG-SS2023-D.300.jpg"
        creation-date:
          type: string
          format: date-time
        last-change-date:
          type: string
          format: date-time
        asset-metadata:
          $ref: "#/components/schemas/content-metadata"

    sketches-assets:
      type: object
      properties:
        asset-type:
          allOf:
            - $ref: "#/components/schemas/asset-type"
          example: image
        asset-category:
          $ref: "#/components/schemas/category"
        asset-classification:
          $ref: "#/components/schemas/classification"
        season:
          description: Season the product item belongs to
          type: string
          example: "SS2020"
        mime-type:
          type: string
          enum:
          - image/png
          - image/jpeg
          - image/jpg
          - video/mp4
          - video/H263
          - video/H264
          - video/H265
        resolution:
          $ref: "#/components/schemas/resolution"
        media-width:
          type: string
          example: "640px"
        media-height:
          type: string
          example: "640px" 
        size:
          description: size of the digital asset in bytes
          type: integer
          example: 543145        
        url:
          type: string
          format: uri
          example: "https://dam.armani.it/asset/transform.GAMIPIC-Y4R173-S.1200.jpg"
        creation-date:
          type: string
          format: date-time
        last-change-date:
          type: string
          format: date-time
        href:
          type: string
          format: uri
          example: "https://apiarmanidev.gateway.webmethodscloud.de/gateway/digital-assets/v1/sketches?style=Y4R173"
        content-metadata:
          $ref: "#/components/schemas/content-metadata"
          
    swatches-assets:
      type: object
      properties:
        asset-type:
          allOf:
            - $ref: "#/components/schemas/asset-type"
          example: swatch
        asset-category:
          $ref: "#/components/schemas/category"
        asset-classification:
          $ref: "#/components/schemas/classification"
        season:
          description: Season the product item belongs to
          type: string
          example: "SS2020"
        mime-type:
          type: string
          enum:
          - image/png
          - image/jpeg
          - image/jpg
          - video/mp4
          - video/H263
          - video/H264
          - video/H265
        resolution:
          $ref: "#/components/schemas/resolution"
        media-width:
          type: string
          example: "640px"
        media-height:
          type: string
          example: "640px" 
        size:
          description: size of the digital asset in bytes
          type: integer
          example: 543145        
        url:
          type: string
          format: uri
          example: "https://dam.armani.it/asset/transform.GAMIPIC-Y068E_85726-T.1200.jpg"
        creation-date:
          type: string
          format: date-time
        last-change-date:
          type: string
          format: date-time
        href:
          type: string
          format: uri
          example: "https://apiarmanidev.gateway.webmethodscloud.de/gateway/digital-assets/v1/swatches?style=Y4R173&fabric=Y068E&color=85726"
        content-metadata:
          $ref: "#/components/schemas/content-metadata"

    style:
      type: string
      example: "6LSG03"
      
    fabric:
      type: string
      example: "SM17Z"
      
    color:
      type: string
      example: "F8G8"
    
    brand:
      type: string
      enum:
        - EA
        - EA7
        - AX
        - GA
        - AJR
        - 10
        - 30
        - 67
        - 70
      example: "GA"
    
    classification:
      type: string
      enum:
        - main
        - all
      example: main

    resolution:
      type: string
      enum:
        - "300"
        - "600"
        - "1200"

    content-metadata:
      type: object
      properties:
        tag1:
          type: string
        tag2:
          type: string
        tag3:
          type: string  


    error:
      type: object
      properties:
        code:
          type: string
        reason:
          type: string
        message:
          type: string

    task-status:
      type: string
      enum:
        - Init
        - Waiting
        - In Progress
        - Failed
        - Complete

    unauthorized-error:
      type: object
      properties:
        code:
          type: string
          example: "401"
        reason:
          type: string
          example: "Not Authorized!"
        message:
          type: string
          example: Please check your authentication, api-key, basic auth, OAuth etc..."
          
    url-collection:
      type: object
      properties:
        brand:
          type: string
          enum:
            - GA
            - EA
            - EA7
            - AX
          example: "EA"
        year:
          type: string
          example: "2023"
        season:
          type: string
          enum:
            - SS
            - FW
          example: "SS"
        assets:
          type: array
          items:
            $ref: "#/components/schemas/asset-url"
            
    asset-url:
      type: object
      properties:
        item-id:
          description: identifier of the asset the url refers to (style-fabric-color)
          type: string
          example: "8NPPC1_PJ05Z_0544"
        url:
          description: publicly accessbile url
          type: string
          format: url
          example: "https://dam.armani.it/asset/transform.CHALCO-8NPPC1_PJ05Z_0544-SS2019-F.600.jpg"
        record-creation-date:
          type: string
          format: datetime
          example: "2022-12-06T14:14:34.211224"
=======

>>>>>>> f0a2a665718323a3ca7a4e5ff28970666a534584
