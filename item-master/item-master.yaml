openapi: "3.0.2"
info:
  title: API Title
  version: "1.0"
servers:
  - url: https://api.server.test/v1
paths:
  /items:
    get:
      summary: Return all Items for a given Year/Season
      description: Return active items
      operationId: ""
      parameters:
        - name: year
          in: query
          description: Year values that need to be considered for filter
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
              default: "2022"
        - name: season
          in: query
          description: Season values that need to be considered for filter
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
              default: SS
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/item"
        "default":
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "../error/error.yaml#/components/schemas/error"
      security:
        - api_key: []
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
  schemas:
    item:
      type: object
      required:
        - sku
      properties:
        sku:
          type: string
          example: XYZ010XOI69 00102N
        generic-article:
          type: string
          example: XYZ010XOI69 001
        active-season:
          $ref: "../common/common.yaml#/components/schemas/season"
        creation-season:
          $ref: "../common/common.yaml#/components/schemas/season"
        style:
          $ref: "../common/common.yaml#/components/schemas/style"
        fabric:
          $ref: "../common/common.yaml#/components/schemas/fabric"
        color:
          $ref: "../common/common.yaml#/components/schemas/color"
        drop:
          $ref: "../common/common.yaml#/components/schemas/drop"
        variant:
          type: string
          example: ""
        variant-type:
          type: string
          example: ""
        size:
          $ref: "../common/common.yaml#/components/schemas/size"
        style-fabric-description:
          type: array
          example:
            - language: en
              description: SNK COW SUEDE+CALF V
            - language: it
              description: Vitello V
          items:
            $ref: "../common/common.yaml#/components/schemas/localized-message"
        article-description:
          type: array
          example:
            - language: en
              description: XYZ010 XOI69 A553 SNK COW SUEDE+CALF V
            - language: it
              description: XYZ010 XOI69 A553 Vitello V
          items:
            $ref: "../common/common.yaml#/components/schemas/localized-message"
        barcodes:
          type: array
          items:
            $ref: "../common/common.yaml#/components/schemas/barcode"
        division:
          $ref: "../common/common.yaml#/components/schemas/division"
        collection:
          $ref: "../common/common.yaml#/components/schemas/collection"
        theme:
          $ref: "../common/common.yaml#/components/schemas/theme"
        product:
          $ref: "../common/common.yaml#/components/schemas/product"
        product-type:
          $ref: "../common/common.yaml#/components/schemas/product-type"
        product-kind:
          $ref: "../common/common.yaml#/components/schemas/product-kind"
        merchandise-category:
          $ref: "../common/common.yaml#/components/schemas/merchandise-category"
        merchandise-group:
          $ref: "../common/common.yaml#/components/schemas/merchandise-group"
        category:
          $ref: "../common/common.yaml#/components/schemas/category"
        brand:
          $ref: "../common/common.yaml#/components/schemas/brand"
        madein:
          type: array
          items:
            $ref: "../common/common.yaml#/components/schemas/made-in"
        fashion-grade:
          $ref: "../common/common.yaml#/components/schemas/seasonality"
        gender:
          $ref: "../common/common.yaml#/components/schemas/gender"
        rfid-enabled:
          type: boolean
          default: false
        cites:
          $ref: "../common/common.yaml#/components/schemas/cites"
        underline:
          $ref: "../common/common.yaml#/components/schemas/underline"
        commodity-code:
          $ref: "../common/common.yaml#/components/schemas/commodity-code"
        packaging-type:
          $ref: "../common/common.yaml#/components/schemas/packaging-type"
        range-name:
          $ref: "../common/common.yaml#/components/schemas/range-name"
        capsule-special-projects:
          $ref: "../common/common.yaml#/components/schemas/capsule-special-projects"
        luxury-article:
          $ref: "../common/common.yaml#/components/schemas/luxury-article"
        status:
          $ref: "../common/common.yaml#/components/schemas/item-status"
        creation-date:
          type: string
          format: date-time
        last-change-date:
          type: string
          format: date-time
        composition:
          $ref: "../common/common.yaml#/components/schemas/composition"

