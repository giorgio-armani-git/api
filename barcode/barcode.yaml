openapi: "3.0.0"
info:
  title: Barcode
  description: Giorgio Armani Barcodes
  version: "1.0.0"
servers:
  - url: '{protocol}://{environment}.giorgioarmani.it/v1'
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
      environment:
        default: api    # Production server
        enum:
          - api      # Production server
          - apidev   # Development server
          - apitst   # Test server
paths:
  /barcode/{barcode}:
    get:
      summary: Return the specified barcode
      description: Return active barcodes
      operationId: ''
      parameters:
        - name: barcode
          in: path
          description: barcode
          required: true
          explode: true
          schema:
            type: string
            default: "8054804724299"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/barcode"
        "401":
          description: Unauthorized Error
          content:
            application/json:
              schema:
                $ref: "../error/error.yaml#/components/schemas/unauthorized-error"
        "default":
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "../error/error.yaml#/components/schemas/error"

  /barcode:
    get:
      summary: Return all active barcodes
      description: 'Return all active barcodes, parameters: item-id (can be both sku or generic-article) and pagination limit&offset'
      operationId: ''
      parameters:
        - name: item-id
          in: query
          description: item-id (can be both sku or generic-article)
          required: false
          explode: true
          schema:
            type: string
            default: "XYZ010XOI69 00102N"
        - $ref: "../common/parameter/pagination.yaml#/parameters/limit"
        - $ref: "../common/parameter/pagination.yaml#/parameters/offset"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/barcode"
        "401":
          description: Unauthorized Error
          content:
            application/json:
              schema:
                $ref: "../error/error.yaml#/components/schemas/unauthorized-error"
        "default":
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "../error/error.yaml#/components/schemas/error"

security:
  - api-key-auth: []

components:

  securitySchemes:
    api-key-auth:
      type: apiKey
      in: header              # can be "header", "query" or "cookie"
      name: X-Gateway-APIKey  # name of the header, query parameter or cookie

  schemas:
    barcode:
      type: object
      properties:
        item-id:
          type: string
          example: XYZ010XOI69 00102N
        barcode:
          type: integer
          example: 8054804724299
        href:
          type: string
          format: url
          example: "https://api.giorgioarmani.it/v1/barcode/8054804724299"
        sku-href:
          type: string
          format: url
          example: "https://api.giorgioarmani.it/v1/barcode/?item-id=XYZ010XOI69 00102N"
        generic-article-href:
          type: string
          format: url
          example: "https://api.giorgioarmani.it/v1/barcode/?item-id=XYZ010XOI69 001"
        barcode-type:
          type: string
          example: GTIN13
        main:
          type: boolean
          default: false
      description: barcodes
