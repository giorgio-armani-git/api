openapi: 3.0.0
info:
  title: Transaction
  description: Giorgio Armani transaction
  version: "1.0.0"
servers:
  - url: '{protocol}://{environment}.giorgioarmani.it/v1'
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
      environment:
        default: api    # Production server
        enum:
          - api      # Production server
          - apidev   # Development server
          - apitst   # Test server
paths:
  /transactions:
    get:
      summary: Returns transactions
      description: Returns transactions
      operationId: ""
      parameters:
        - name: retail-store-id
          in: query
          description: Store id
          required: true
          explode: true
          schema:
            type: string
            example: "4S09"

        - $ref: "../common/parameter/pagination.yaml#/parameters/limit"
        - $ref: "../common/parameter/pagination.yaml#/parameters/offset"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/transaction"
        "401":
          description: Unauthorized Error
          content:
            application/json:
              schema:
                $ref: "../error/error.yaml#/components/schemas/unauthorized-error"
        "default":
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "../error/error.yaml#/components/schemas/error"


  /transaction/{transaction-id}:
    get:
      summary: Returns a transaction by id
      description: Returns transaction by id
      operationId: ""
      parameters:
        - name: transaction-id
          in: path
          description: Season values that need to be considered for filter
          required: true
          explode: true
          schema:
            type: string
            example: "0004CW011063516"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/transaction"
        "401":
          description: Unauthorized Error
          content:
            application/json:
              schema:
                $ref: "../error/error.yaml#/components/schemas/unauthorized-error"
        "default":
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "../error/error.yaml#/components/schemas/error"

security:
  - api-key-auth: []

components:

  securitySchemes:
    api-key-auth:
      type: apiKey
      in: header
      name: X-Gateway-APIKey





  schemas:
    transaction:
      type: object
      properties:
        id:
          type: string
          example: 0004CW011063516
          description: transction id
        transaction-type:
          $ref: "#/components/schemas/transaction-type"
        workstation-id:
          type: string
          description: POS Number
          example: "1"
        retail-store-id:
          type: string
          description: store id
          example: "4SCW"
        channel:
          $ref: "#/components/schemas/pos-channel-type"
          example: "retail-mobile"
        business-date:
          type: string
          format: date-time
          description: Posting Date
        transaction-start:
          type: string
          format: date-time
        transaction-end:
          type: string
          format: date-time
        operator-id:
          $ref: "#/components/schemas/employee"
        partner-id:
          $ref: "#/components/schemas/customer"
        original-transaction-id:
          type: string
          description: "Reference to Original Receipt for Transaction Number"
          example: ""
        creation-date:
          $ref: "../common/creation-date.yaml#/components/schemas/creation-date"
        last-change-date:
          $ref: "../common/last-change-date.yaml#/components/schemas/last-change-date"
        transaction-items:
          type: array
          items:
            $ref: "#/components/schemas/transaction-item"
        tenders:
          type: array
          items:
            $ref: "#/components/schemas/tender"



    # record qualifier 5
    transaction-item:
      type: object
      properties:
          id:
            type: integer
            description: "Sales Item Number"
            example: 1
          retail-type-code:
            $ref: "#/components/schemas/retail-type"
          barcode:
            $ref: "../barcode/barcode.yaml#/components/schemas/barcode"
          quantity:
            type: integer
            description: "Quantity in Sales Unit"
            example: 1
          sales-amount:
            $ref: "../common/money.yaml#/components/schemas/money"
          actual-unit-price:
            $ref: "../common/money.yaml#/components/schemas/money"
          tax:
            $ref: "#/components/schemas/tax"
          discounts:
            type: array
            items:
              $ref: "#/components/schemas/discount"
          commission:
            $ref: "#/components/schemas/commission"




    # record qualifier 13 Tax
    tax:
      type: object
      properties:
        id:
          type: string
          description: "Tax Item id"
          example: "4301"
        description:
          type: string
          description: "Tax Type"
          example: ""
        tax-amount:
          $ref: "../common/money.yaml#/components/schemas/money"
      example:
        id: "4301"
        description: "VAT"
        tax-amount:
          amount: 2200
          currency: "EUR"


    # record qualifier 11 Discount
    discount:
      type: object
      properties:
        id:
          type: string
          description: "Discount ID"
        description:
          type: string
          description: "Discount Type Description"
        reduction-amount:
          $ref: "../common/money.yaml#/components/schemas/money"
        offer-id:
          type: string
          description: "Offer ID"
          example: ""
      example:
        id: "84"
        description: "Employee Discount"
        reduction-amount:
          amount: 5005
          currency: "EUR"
        offer-id: "Employees"


    # record qualifier 15 Commission
    commission:
      type: object
      properties:
        employee:
          $ref: "#/components/schemas/employee"


    # record qualifier 21 Tender
    tender:
      type: object
      properties:
        id:
          type: string
          description: "Tender ID"
        description:
          type: string
          description: "Tender Description"
        amount:
          $ref: "../common/money.yaml#/components/schemas/money"
        exchange-rate:
          type: number
          format: decimal
          description: Exchange Rate in caso of currency conversion
        foreign-currency-amount:
          $ref: "../common/money.yaml#/components/schemas/money"
          description: "Exchange rate from transaction to payment currency"

      example:
        id: "148"
        description: "VISA POS"
        amount:
          amount: 71900
          currency: "EUR"
        exchange-rate: 0.88
        foreign-currency-amount:
          amount: 80590
          currency: "USD"


    transaction-type:
      type: string
      enum:
        - sales
        - good-movement
        - end-of-day
        - void

    retail-type:
      type: object
      description: ""
      properties:
        id:
          type: string
          example: "60"
        description:
          type: string
          example: "Sales"


    pos-channel-type:
      type: string
      description: POS channel
      enum:
        - retail-mobile-pos
        - retail-fixed-pos


    # Partner is a base type from which extends Employee and Customer
    employee:
      type: object
      description: Employee
      properties:
        id:
          type: string
          description: partner id
        href:
          type: string
          format: uri
      example:
        id: "AY85GT"
        href: "https://api.giorgioarmani.it/v1/employee/AY85GT"

    customer:
      type: object
      description: Customer
      properties:
        id:
          type: string
          description: partner id
        href:
          type: string
          format: uri
      example:
        id: "10934402"
        href: "https://apiarmani.gateway.webmethodscloud.de/gateway/GA_ALL_CAR_CUSTOMER_DATA_IN/1/CustomerSet?$filter=substringof('10934402', Partner)&$format=json"
