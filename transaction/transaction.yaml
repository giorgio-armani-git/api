openapi: 3.0.0
info:
  title: Transaction
  description: Giorgio Armani transaction
  version: "1.0.0"
servers:
  - url: '{protocol}://{environment}.giorgioarmani.it/v1'
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
      environment:
        default: api    # Production server
        enum:
          - api      # Production server
          - apidev   # Development server
          - apitst   # Test server
paths:
  /transactions:
    get:
      summary: Returns transactions
      description: Returns transactions
      operationId: ""
      parameters:
        - name: x-idempotent-key
          $ref: "../common/parameter/idempotent-key.yaml#/parameters/idempotent-key"
        - name: transaction-id
          in: query
          description: transaction id
          schema:
            type: string
            example: 0004CW011063516
        - name: retail-store-id
          in: query
          description: Store id
          required: false
          explode: true
          schema:
            type: string
            example: "4S09"
        - name: channel-id
          in: query
          description: "Is transaction born on fixed POS or mobile POS ?"
          required: false
          schema:
            $ref: "./pos-channel-type.yaml#/components/schemas/pos-channel-type"
        - name: transaction-type
          in: query
          description: "Transaction Type ( Sales, EOD,void,goodmvt)"
          required: false
          schema:
            $ref: "./transaction-type.yaml#/components/schemas/transaction-type"
        - name: operator-id
          in: query
          description: Operator Id
          schema:
            type: string
            example: "AY85GT"
        - name: partner-id
          in: query
          description: Partner Id
          schema:
            type: string
            example: "10934402"
        - name: business-date-start
          $ref: "../common/parameter/date-filter.yaml#/parameters/start-date"
        - name: business-date-end
          $ref: "../common/parameter/date-filter.yaml#/parameters/end-date"
        - name: fiscal-number
          in: query
          description: "Fiscal number"
          schema:
            type: string
        - name: invoice-number
          in: query
          description: "Invoice number"
          schema:
            type: string
        - name: creation-date-start
          in: query
          schema:
            type: string
            format: date-time
            default: "2000-01-01T00:01:01.000Z"
        - name: creation-date-end
          in: query
          schema:
            type: string
            format: date-time
            default: "2000-01-01T00:01:01.000Z"
        - name: last-change-date-start
          in: query
          schema:
            type: string
            format: date-time
            default: "2000-01-01T00:01:01.000Z"
        - name: last-change-date-end
          in: query
          schema:
            type: string
            format: date-time

        - $ref: "../common/parameter/pagination.yaml#/parameters/limit"
        - $ref: "../common/parameter/pagination.yaml#/parameters/offset"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/list"
        "401":
          description: Unauthorized Error
          content:
            application/json:
              schema:
                $ref: "../error/error.yaml#/components/schemas/unauthorized-error"
        "default":
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "../error/error.yaml#/components/schemas/error"

    post:
      summary: Create a new transaction
      description: Create a new transaction
      operationId: ""
      parameters:
        - name: x-idempotent-key
          $ref: "../common/parameter/idempotent-key.yaml#/parameters/idempotent-key"
        - name: transaction
          in: body
          required: true
          schema:
            $ref: "#/components/schemas/transaction"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: synthetic id
                    example: "MDAwNENXMDExMDYzNTE2LTRTQ1ctMjAyMS0xMi0yOVQxNDozMDo1OC41OTFa"
        "401":
          description: Unauthorized Error
          content:
            application/json:
              schema:
                $ref: "../error/error.yaml#/components/schemas/unauthorized-error"
        "default":
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "../error/error.yaml#/components/schemas/error"

    patch:
      summary: Update a transaction
      description: Update a transaction
      operationId: ""
      parameters:
        - name: x-idempotent-key
          $ref: "../common/parameter/idempotent-key.yaml#/parameters/idempotent-key"
        - name: transaction
          in: body
          required: true
          schema:
            $ref: "#/components/schemas/patch-transaction"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: synthetic id
                    example: "MDAwNENXMDExMDYzNTE2LTRTQ1ctMjAyMS0xMi0yOVQxNDozMDo1OC41OTFa"
        "401":
          description: Unauthorized Error
          content:
            application/json:
              schema:
                $ref: "../error/error.yaml#/components/schemas/unauthorized-error"
        "default":
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "../error/error.yaml#/components/schemas/error"

  /transaction/{id}:
    get:
      summary: Returns a transaction by id
      description: Returns transaction by id
      operationId: ""
      parameters:
        - name: x-idempotent-key
          $ref: "../common/parameter/idempotent-key.yaml#/parameters/idempotent-key"
        - name: id
          in: path
          description: id = base64_encode( transaction-id + "-" store-id + "-" business-date), see https://www.utilities-online.info/base64
          required: true
          explode: true
          schema:
            type: string
            example: "MDAwNENXMDExMDYzNTE2LTRTQ1ctMjAyMS0xMi0yOVQxNDozMDo1OC41OTFa"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/transaction"
        "401":
          description: Unauthorized Error
          content:
            application/json:
              schema:
                $ref: "../error/error.yaml#/components/schemas/unauthorized-error"
        "default":
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "../error/error.yaml#/components/schemas/error"


security:
  - api-key-auth: []

components:

  securitySchemes:
    api-key-auth:
      type: apiKey
      in: header
      name: X-Gateway-APIKey



  schemas:
    transaction:
      type: object
      properties:
        id:
          type: string
          example: MDAwNENXMDExMDYzNTE2LTRTQ1ctMjAyMS0xMi0yOVQxNDozMDo1OC41OTFa
          description: synthetic id (base64 encoding)
        transaction-id:
          type: string
          example: 0004CW011063516
          description: transction id
          required: true
        transaction-type:
          $ref: "./transaction-type.yaml#/components/schemas/transaction-type"
        workstation-id:
          type: string
          description: POS Number
          example: "1"
        retail-store-id:
          $ref: "../store/store.yaml#/components/schemas/store"
          example:
            id: "4SCW"
            href: "https://api.giorgioarmani.it/v1/store/4SCW"
        channel:
          $ref: "./pos-channel-type.yaml#/components/schemas/pos-channel-type"
          example: "retail-mobile"
        business-date:
          type: string
          format: date-time
          description: Posting Date
        transaction-start:
          type: string
          format: date-time
        transaction-end:
          type: string
          format: date-time
        operator-id:
          $ref: "../employee/employee.yaml#/components/schemas/employee"
          example:
            id: "AY85GT"
            href: "https://api.giorgioarmani.it/v1/employee/AY85GT"
        partner-id:
          $ref: "../customer/customer.yaml#/components/schemas/customer"
          example:
            id: "10934402"
            href: "https://apiarmani.gateway.webmethodscloud.de/gateway/GA_ALL_CAR_CUSTOMER_DATA_IN/1/CustomerSet?$filter=substringof('10934402', Partner)&$format=json"
        fiscal-number:
          type: string
          example: 16
        document-type:
          $ref: "./document-type.yaml#/components/schemas/document-type"
        invoice-number:
          type: string
          example: "11820054"
        tax-free-id:
          type: string
          example: "5065910159"
        omni-channel-reason:
          $ref: "./omni-channel-reason.yaml#/components/schemas/omni-channel-reason"
        status:
          $ref: "../common/status.yaml#/components/schemas/status"
        creation-date:
          $ref: "../common/creation-date.yaml#/components/schemas/creation-date"
        last-change-date:
          $ref: "../common/last-change-date.yaml#/components/schemas/last-change-date"
        transaction-items:
          type: array
          items:
            $ref: "./transaction-item.yaml#/components/schemas/transaction-item"
        tenders:
          type: array
          items:
            $ref: "./tender.yaml#/components/schemas/tender"

    patch-transaction:
      type: object
      properties:
        id:
          type: string
          example: MDAwNENXMDExMDYzNTE2LTRTQ1ctMjAyMS0xMi0yOVQxNDozMDo1OC41OTFa
          description: synthetic id (base64 encoding)
        operator-id:
          $ref: "../employee/employee.yaml#/components/schemas/employee"
          example:
            id: "AY85GT"
            href: "https://api.giorgioarmani.it/v1/employee/AY85GT"
        partner-id:
          $ref: "../customer/customer.yaml#/components/schemas/customer"
          example:
            id: "10934402"
            href: "https://apiarmani.gateway.webmethodscloud.de/gateway/GA_ALL_CAR_CUSTOMER_DATA_IN/1/CustomerSet?$filter=substringof('10934402', Partner)&$format=json"
        document-type:
          $ref: "./document-type.yaml#/components/schemas/document-type"
        invoice-number:
          type: string
          example: "11820054"
        status:
          $ref: "../common/status.yaml#/components/schemas/status"
        last-change-date:
          $ref: "../common/last-change-date.yaml#/components/schemas/last-change-date"
        transaction-items:
          type: array
          items:
              type: object
              properties:
                id:
                  type: integer
                  description: "Sales Item Number"
                  example: 1
                commission:
                  $ref: "./commission.yaml#/components/schemas/commission"


    list:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/transaction"








