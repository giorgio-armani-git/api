openapi: "3.0.0"
info:
  title: Digital Assets API
  description: Digital Assets API exposes the method to retrieve different types of digital assets <p> GET method to retrieve digital assets for a specific item-id (generic or sku) <p> GET method to to retrieve digital assets when item-id is not known and only Style Fabric Color are known <p> POST method to asynchronously retrieve digital assets for multiple product items <p> GET method to query the status of the asynchronous task and retrieve the results
  version: "1.0.0"
servers:
  - url: '{protocol}://{environment}.armani.it/digital-assets/v1'
    variables:
      protocol:
        enum:
          - https
        default: https
      environment:
        default: api    # Production server
        enum:
          - api      # Production server
          - apidev   # Development server
          - apitst   # Test server

paths:
  
  /media-item/{item-id}:
    get:
      description: Return URLs of media items for the specified item-id, i.e. images and / or video
      parameters:
        - name: item-id
          in: path
          description: item-id can be the generic item id or the sku
          required: true
          explode: true
          schema:
            type: string
            example: "XYZ010XOI69 001"
        - name: style
          in: query
          type: string
          description: ID of the style of the item the query refers to
          required: true
          example: "6LSG03"
        - name: fabric
          in: query
          type: string
          description: ID of the fabric of the item the query refers to
          required: true
          example: "SM17Z"
        - name: color
          in: query
          type: string
          description: ID of the color of the item the query refers to
          required: true
          example: "F8G8"
        - name: asset-category
          in: query
          description: Requester of the image (marketing samples, e-commerce, social media)
          required: false
          schema:
            $ref: "asset-category.yaml#/components/schemas/asset-category"
        - name: asset-classification
          in: query
          description: The classification of the content, i.e. the views (main,front,side,back etc. )
          required: false
          explode: true
          schema:
            $ref: "content-classification.yaml#/components/schemas/classification"
        - name: mime-type
          in: query
          description: the mime-type of the digital asset
          required: false
          type: string
          example: "image/jpg"
        - name: transaction-id
          in: header
          description: unique identifier of the transaction to be propagated to downstream servers, if not included by the Application calling the API it will be generated by the API Gateway
          required: false
          schema:
            type: string
            format: uuid
        - name: x-Gateway-APIKey
          in: header
          description: API Key assigned to the Application calling the API
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/multi-items-digital-assets"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "405":
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema: 
                $ref: "error.yaml#/components/schemas/error"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
 
  /media-item/:
    get:
      description: Return URLs of media items for the specified query parameters without path parameter
      parameters:
        - name: style
          in: query
          type: string
          description: ID of the style of the item the query refers to
          required: true
          example: "6LSG03"
        - name: fabric
          in: query
          type: string
          description: ID of the fabric of the item the query refers to
          required: true
          example: "SM17Z"
        - name: color
          in: query
          type: string
          description: ID of the color of the item the query refers to
          required: true
          example: "F8G8"
        - name: asset-category
          in: query
          description: Requester of the image (marketing samples, e-commerce, social media)
          required: false
          schema:
            $ref: "asset-category.yaml#/components/schemas/asset-category"
        - name: asset-classification
          in: query
          description: The classification of the content, i.e. the views (main,front,side,back etc. )
          required: false
          explode: true
          schema:
            $ref: "content-classification.yaml#/components/schemas/classification"
        - name: mime-type
          in: query
          description: the mime-type of the digital asset
          required: false
          type: string
          example: "image/jpg"
        - name: transaction-id
          in: header
          description: unique identifier of the transaction to be propagated to downstream servers, if not included by the Application calling the API it will be generated by the API Gateway
          required: false
          schema:
            type: string
            format: uuid
        - name: x-Gateway-APIKey
          in: header
          description: API Key assigned to the Application calling the API
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/multi-items-digital-assets"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "405":
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema: 
                $ref: "error.yaml#/components/schemas/error"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
  
  /sketches/:
    get:
      description: Return URLs of the sketch(es) identified by the style query parameter
      parameters:
        - name: style
          in: query
          type: string
          description: ID of the style of the item the query refers to
          required: true
          example: "6LSG03"
        - name: asset-category
          in: query
          description: Requester of the image (marketing samples, e-commerce, social media)
          required: false
          schema:
            $ref: "asset-category.yaml#/components/schemas/asset-category"
        - name: asset-classification
          in: query
          description: The classification of the content, i.e. the views (main,front,side,back etc. )
          required: false
          explode: true
          schema:
            $ref: "content-classification.yaml#/components/schemas/classification"
        - name: mime-type
          in: query
          description: the mime-type of the digital asset
          required: false
          type: string
          example: "image/jpg"
        - name: transaction-id
          in: header
          description: unique identifier of the transaction to be propagated to downstream servers, if not included by the Application calling the API it will be generated by the API Gateway
          required: false
          schema:
            type: string
            format: uuid
        - name: x-Gateway-APIKey
          in: header
          description: API Key assigned to the Application calling the API
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/multi-items-digital-assets"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "405":
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema: 
                $ref: "error.yaml#/components/schemas/error"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
  
  /media-items/bulk-retrieve:
    post:
      description: endpoint to trigger asynchronous task to retrieve list of digital assets URLs
      parameters:
        - name: transaction-id
          in: header
          description: unique identifier of the transaction, if not provided by the API Client it will be generated by the API Gateway and propagated to the backend systems
          required: false
          schema:
            type: string
            format: uuid
            example: "87fcfd32-caf4-46e6-98b2-18a284ddd9d1"
        - name: x-Gateway-APIKey
          in: header
          description: header carrying the API Key assigned to the Application that is calling the digital-assets API
          required: true
          schema:
            type: string
            example: "cb6298ab-1fb3-4fa5-ac96-dfe9c9f4a18a"
      requestBody:
        description: The request body of the POST request carrying the properties to implement search on the backend
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - brand
                - season
              properties:
                brand:
                  description: The brand the bulk search refers to
                  $ref: "brand.yaml#/components/schemas/brand"
                season:
                  description: The season the bulk search refers to
                  type: string
                  example: "FW22"
                gender:
                  description: The gender the bulk serach refers to
                  type: string
                  example: "M"
                asset-type:
                  description: The type of digital assets the bulk search refers to (e.g. image, video, etc.)
                  $ref: "asset-type.yaml#/components/schemas/asset-type"
                asset-category:
                  description: The category of digital assets the bulk search refers to (e.g. web)
                  $ref: "asset-category.yaml#/components/schemas/asset-category"
                creation-date-start:
                  description: The start date of the search interval
                  type: string
                  format: date-time
                  example: "2022-09-19T05:56:18Z"
                creation-date-end:
                  description: The end date of the bulk search interval
                  type: string
                  format: date-time
                  example: "2022-09-19T09:06:55Z"
                last-change-date-start:
                  description: The start date of the bulk search interval
                  type: string
                  format: date-time
                  example: "2022-09-19T05:56:18Z"
                laset-change-date-end:
                  description: The end date of the bulk search interval
                  type: string
                  format: date-time
                  example: "2022-09-19T09:06:55Z"
                media-width:
                  description: The width in pixel of the media item
                  type: string
                  example: "640px"
                media-height:
                  description: The height in pixel of the media item
                  type: string
                  example: "640px"
                callbackUrl:
                  description: The URL where API Consumer wants to receive notification about asynchronous task
                  type: string
                  format: uri
                  example: "https://notifications.apiconsumer.com"

      responses:
        "202":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bulk-retrieve-response"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "405":
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "error.yaml#/components/schemas/error"

      callbacks:
        myEvent:
          "{$request.body#/callbackUrl}":
            post:
              requestBody:   # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        task-id:
                          description: The identifier of the background task
                          type: string
                          example: "e7236d04-eb8c-4bd8-9f2b-bf8b2c1b7451"
                        task-status:
                          $ref: "task-status.yaml#/components/schemas/task-status"
                          example: "Complete"
                        message:
                          type: string
                          example: "The background task is complete"
                        retrieve-url:
                          type: string
                          format: uri
                          description: Query this URL to retrieve the result of the background task
                      required:
                        - task-id
                        - task-status
                        - message
              responses:   # Expected responses to the callback message
                "201":
                  description: Return this code if the callback is accepted
          
      
    
  /media-items/bulk-retrieve/{task-id}:
      get:
        description: returns the status and the result of the background task
        parameters:
          - name: task-id
            in: path
            description: The identifier of the background task
            required: true
            schema:
              type: string
            example: "e7236d04-eb8c-4bd8-9f2b-bf8b2c1b7451"
          - name: transaction-id
            in: header
            description: The unique identifier of the transaction to be propagated to downstream servers, if not present it will be generated by the API Gateway
            required: false
            schema:
              type: string
              format: uuid
            example: "c1bf1fa3-77f2-4958-97a1-74df933f40ab"
          - name: x-Gateway-APIKey
            in: header
            description: API Key assigned to the Application calling the API
            required: true
            schema:
              type: string
            example: "63543562-de1c-42de-928c-395c557ff022"
              
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    task-id:
                      description: The identifier of the background task
                      type: string
                      example: "eeb37384-a2f5-40e5-8abe-a4bf0e66f2ea"
                    task-status:
                      description: The status of the background task
                      type: string
                      example: "Complete"
                    task-result:
                      $ref: "#/components/schemas/multi-items-digital-assets"

          "400":
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: "error.yaml#/components/schemas/error"
          "401":
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: "error.yaml#/components/schemas/error"
          "403":
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: "error.yaml#/components/schemas/error"
          "404":
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: "error.yaml#/components/schemas/error"
          "405":
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: "error.yaml#/components/schemas/error"
          "429":
            description: Too Many Requests
            content:
              application/json:
                schema:
                  $ref: "error.yaml#/components/schemas/error"
          "500":
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: "error.yaml#/components/schemas/error"
          "502":
            description: Bad Gateway
            content:
              application/json:
                schema:
                  $ref: "error.yaml#/components/schemas/error"
          "503":
            description: Service Not Available
            content:
              application/json:
                schema:
                  $ref: "error.yaml#/components/schemas/error"
          "504":
            description: Gateway Timeout
            content:
              application/json:
                schema:
                  $ref: "error.yaml#/components/schemas/error"
    
    
security:
  - api-key-auth: []

components:

  securitySchemes:
    api-key-auth:
      type: apiKey
      in: header
      name: x-Gateway-APIKey

  schemas:
      
    bulk-retrieve-response:
      type: object
      required:
        - task-id
      properties:
        task-id:
          description: Unique identifier of the background asynchronous task (assigned by the backend system)
          type: string

    multi-items-digital-assets:
      description: Array of digital assets
      type: array
      items:
        $ref: "#/components/schemas/digital-assets"
 
    digital-assets:
      type: object
      description: object encapsulating properties of the digitial asset
      required:
        - item-type
        - item-id
        - href
        - brand
        - gender
        - assets
      properties:
        item-type:
          type: string
          enum:
            - generic
            - sku
            - sfc
        item-id:
          description: Unique identifier of the item
          type: string
          examples: 
            Generic: "XYZ010XOI69 001"
            Style-Fabric-Color: "2WHGK03H_T01QW_UC99"
        href:
          description: Hypertext reference to the item 
          type: string
          format: uri
          example: 
              href: "https://api.armani.it/v1/digital-assets/media-item/?style=2WHGK03H&fabric=T01QW&color=UC99"
        brand:
          description: Brand the item belong to
          $ref: "brand.yaml#/components/schemas/brand"
        gender:
          description: Gender the product item refers to
          type: string
          example: "M"
        asset-category:
          $ref: "asset-category.yaml#/components/schemas/asset-category"
        assets:
          description: Array of objets carrying the digital assets corresponding to the item
          type: array
          items:
            $ref: "assets.yaml#/components/schemas/assets"
            
          
