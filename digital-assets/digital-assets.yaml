openapi: "3.0.0"
info:
  title: Digital Assets API
  description: Digital Assets API exposes the method to retrieve different types of digital assets <p> GET method to retrieve digital assets for a specific item-id <p> POST method to asynchronously retrieve digital assets for multiple product items <p> GET method to query the status of the asynchronous task and retrieve the results
  version: "1.0.0"
servers:
  - url: '{protocol}://{environment}.armani.it/digital-assets/v1'
    variables:
      protocol:
        enum:
          - https
        default: https
      environment:
        default: api    # Production server
        enum:
          - api      # Production server
          - apidev   # Development server
          - apitst   # Test server

paths:

  /media-items/brands/{brand-id}:
    get:
      description: Return URLs of all media items stored in DAM (main image) for the brand specified as path parameter
      parameters:
        - name: brand-id
          in: path
          description: brand the search refers to
          required: true
          explode: true
          schema:
            type: string
            enum:
              - ga
              - ea
              - ea7
              - ax
            example: "ga"
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/url-collection"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "405":
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/error"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /media-item/{item-id}:
    get:
      description: Return URLs of media items for the specified item-id, i.e. images and / or video
      parameters:
        - name: item-id
          in: path
          description: item-id can be the generic item id or the sku
          required: true
          explode: true
          schema:
            type: string
            example: "2WHGK03H_T01QW_UC99"
        - name: style
          in: query
          description: ID of the style of the item the query refers to
          required: true
          schema:
            $ref: "#/components/schemas/style"
        - name: fabric
          in: query
          description: ID of the fabric of the item the query refers to
          required: true
          schema:
            $ref: "#/components/schemas/fabric"
        - name: color
          in: query
          description: ID of the color of the item the query refers to
          required: true
          schema: 
            $ref: "#/components/schemas/color"
        - name: asset-category
          in: query
          description: Requester of the image (sales, web, social media)
          required: false
          schema:
            $ref: "#/components/schemas/asset-category"
        - name: asset-classification
          in: query
          description: The classification of the content, i.e. the views (main,front,side,back etc. )
          required: true
          explode: true
          schema:
            $ref: "#/components/schemas/classification"
        - name: mime-type
          in: query
          description: the content type of the image
          required: false
          schema:
            $ref: "#/components/schemas/mime-type"
        - name: transaction-id
          in: header
          description: unique identifier of the transaction to be propagated to downstream servers, if not included by the Application calling the API it will be generated by the API Gateway
          required: false
          schema:
            type: string
            format: uuid
        - name: x-Gateway-APIKey
          in: header
          description: API Key assigned to the Application calling the API
          required: true
          schema:
            type: string
        - name: x-Orig-App-Name
          in: header
          description: the name of the API Consumer APP as defined in AXL
          required: false
          schema:
            type: string
        - name: x-Context-Check
          in: header
          description: header carrying boolean to control if required the backend business logic
          required: false
          schema:
            type: boolean
          example: true
            
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/multi-items-digital-assets"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "405":
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/error"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
      
  
  /media-item/:
    get:
      description: Return URLs of media items for the specified item-id, i.e. images and / or video
      parameters:
        - name: style
          in: query
          description: ID of the style of the item the query refers to
          required: true
          schema:
            $ref: "#/components/schemas/style"
        - name: fabric
          in: query
          description: ID of the fabric of the item the query refers to
          required: true
          schema:
            $ref: "#/components/schemas/fabric"
        - name: color
          in: query
          description: ID of the color of the item the query refers to
          required: true
          schema: 
            $ref: "#/components/schemas/color"
        - name: asset-category
          in: query
          description: Requester of the image (sales, web, social media)
          required: false
          schema:
            $ref: "#/components/schemas/asset-category"
        - name: asset-classification
          in: query
          description: The classification of the content, i.e. the views (main,front,side,back etc. )
          required: false
          explode: true
          schema:
            $ref: "#/components/schemas/classification"
        - name: mime-type
          in: query
          description: the content type of the image
          required: false
          schema:
            $ref: "#/components/schemas/mime-type"
        - name: transaction-id
          in: header
          description: unique identifier of the transaction to be propagated to downstream servers, if not included by the Application calling the API it will be generated by the API Gateway
          required: false
          schema:
            type: string
            format: uuid
        - name: x-Gateway-APIKey
          in: header
          description: API Key assigned to the Application calling the API
          required: true
          schema:
            type: string
        - name: x-Orig-App-Name
          in: header
          description: the name of the API Consumer APP as defined in AXL
          required: false
          schema:
            type: string
        - name: x-Context-Check
          in: header
          description: header carrying boolean to control if required the backend business logic
          required: false
          schema:
            type: boolean
          example: true
            
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/multi-items-digital-assets"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "405":
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/error"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
                
                

  /sketches/:
    get:
      description: Return URLs of sketch(es) specified by the mandatory style query parameter
      parameters:
        - name: style
          in: query
          description: ID of the style of the item the query refers to
          required: true
          schema:
            $ref: "#/components/schemas/style"
        - name: asset-category
          in: query
          description: Requester of the image (sales, web, social media)
          required: false
          schema:
            $ref: "#/components/schemas/asset-category"
        - name: mime-type
          in: query
          description: the content type of the image
          required: false
          schema:
            $ref: "#/components/schemas/mime-type"
        - name: transaction-id
          in: header
          description: unique identifier of the transaction to be propagated to downstream servers, if not included by the Application calling the API it will be generated by the API Gateway
          required: false
          schema:
            type: string
            format: uuid
        - name: x-Gateway-APIKey
          in: header
          description: API Key assigned to the Application calling the API
          required: true
          schema:
            type: string
        - name: x-Orig-App-Name
          in: header
          description: the name of the API Consumer APP as defined in AXL
          required: false
          schema:
            type: string
        - name: x-Context-Check
          in: header
          description: header carrying boolean to control if required the backend business logic
          required: false
          schema:
            type: boolean
          example: true
            
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/multi-items-sketches-digital-assets"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "405":
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/error"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
                
                

  /swatches/:
    get:
      description: Return URLs of sketch(es) specified by the mandatory style query parameter
      parameters:
        - name: fabric
          in: query
          description: ID of the fabric of the item the query refers to
          required: true
          schema:
            $ref: "#/components/schemas/fabric"
        - name: color
          in: query
          description: ID of the color of the item the query refers to
          required: true
          schema: 
            $ref: "#/components/schemas/color"
        - name: asset-category
          in: query
          description: Requester of the image (sales, web, social media)
          required: false
          schema:
            $ref: "#/components/schemas/asset-category"
        - name: asset-classification
          in: query
          description: The classification of the content, i.e. the views (main,front,side,back etc. )
          required: false
          explode: true
          schema:
            $ref: "#/components/schemas/classification"
        - name: mime-type
          in: query
          description: the content type of the image
          required: false
          schema:
            $ref: "#/components/schemas/mime-type"
        - name: transaction-id
          in: header
          description: unique identifier of the transaction to be propagated to downstream servers, if not included by the Application calling the API it will be generated by the API Gateway
          required: false
          schema:
            type: string
            format: uuid
        - name: x-Gateway-APIKey
          in: header
          description: API Key assigned to the Application calling the API
          required: true
          schema:
            type: string
        - name: x-Orig-App-Name
          in: header
          description: the name of the API Consumer APP as defined in AXL
          required: false
          schema:
            type: string
        - name: x-Context-Check
          in: header
          description: header carrying boolean to control if required the backend business logic
          required: false
          schema:
            type: boolean
          example: true
            
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/multi-items-swatches-digital-assets"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "405":
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/error"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
                
                

  /media-items/bulk-retrieve:
    post:
      description: endpoint to trigger asynchronous task to retrieve list of digital assets URLs
      parameters:
        - name: transaction-id
          in: header
          description: unique identifier of the transaction, if not provided by the API Client it will be generated by the API Gateway and propagated to the backend systems
          required: false
          schema:
            type: string
            format: uuid
            example: "87fcfd32-caf4-46e6-98b2-18a284ddd9d1"
        - name: x-Gateway-APIKey
          in: header
          description: header carrying the API Key assigned to the Application that is calling the digital-assets API
          required: true
          schema:
            type: string
            example: "cb6298ab-1fb3-4fa5-ac96-dfe9c9f4a18a"
        - name: x-Orig-App-Name
          in: header
          description: the name of the API Consumer APP as defined in AXL
          required: false
          schema:
            type: string
        - name: x-Context-Check
          in: header
          description: header carrying boolean to control if required the backend business logic
          required: false
          schema:
            type: boolean

      requestBody:
        description: The request body of the POST request carrying the properties to implement search on the backend
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - brand
                - season
              properties:
                brand:
                  $ref: "#/components/schemas/brand"
                season:
                  description: The season the bulk search refers to
                  type: string
                  example: "FW22"
                gender:
                  description: The gender the bulk search refers to
                  type: string
                  example: "M"
                asset-type:
                  $ref: "#/components/schemas/asset-type"
                asset-category:
                  $ref: "#/components/schemas/asset-category"
                creation-date-start:
                  description: The start date of the search interval
                  type: string
                  format: date-time
                  example: "2022-09-19T05:56:18Z"
                creation-date-end:
                  description: The end date of the bulk search interval
                  type: string
                  format: date-time
                  example: "2022-09-19T09:06:55Z"
                last-change-date-start:
                  description: The start date of the bulk search interval
                  type: string
                  format: date-time
                  example: "2022-09-19T05:56:18Z"
                laset-change-date-end:
                  description: The end date of the bulk search interval
                  type: string
                  format: date-time
                  example: "2022-09-19T09:06:55Z"
                media-width:
                  description: The width in pixel of the media item
                  type: string
                  example: "640px"
                media-height:
                  description: The height in pixel of the media item
                  type: string
                  example: "640px"
                callbackUrl:
                  description: The URL where API Consumer wants to receive notification about asynchronous task
                  type: string
                  format: uri
                  example: "https://notifications.apiconsumer.com"

      responses:
        "202":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bulk-retrieve-response"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "405":
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "503":
          description: Service Not Available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

      callbacks:
        myEvent:
          "{$request.body#/callbackUrl}":
            post:
              requestBody:   # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        task-id:
                          description: The identifier of the background task
                          type: string
                          example: "e7236d04-eb8c-4bd8-9f2b-bf8b2c1b7451"
                        task-status:
                          $ref: "#/components/schemas/task-status"
                        message:
                          type: string
                          example: "The background task is complete"
                        retrieve-url:
                          type: string
                          format: uri
                          description: Query this URL to retrieve the result of the background task
                      required:
                        - task-id
                        - task-status
                        - message
              responses:   # Expected responses to the callback message
                "201":
                  description: Return this code if the callback is accepted
          
      
    
  /media-items/bulk-retrieve/{task-id}:
      get:
        description: returns the status and the result of the background task
        parameters:
          - name: task-id
            in: path
            description: The identifier of the background task
            required: true
            schema:
              type: string
            example: "e7236d04-eb8c-4bd8-9f2b-bf8b2c1b7451"
          - name: transaction-id
            in: header
            description: The unique identifier of the transaction to be propagated to downstream servers, if not present it will be generated by the API Gateway
            required: false
            schema:
              type: string
              format: uuid
            example: "c1bf1fa3-77f2-4958-97a1-74df933f40ab"
          - name: x-Gateway-APIKey
            in: header
            description: API Key assigned to the Application calling the API
            required: true
            schema:
              type: string
            example: "63543562-de1c-42de-928c-395c557ff022"
          - name: x-Orig-App-Name
            in: header
            description: the name of the API Consumer APP as defined in AXL
            required: false
            schema:
              type: string
          - name: x-Context-Check
            in: header
            description: header carrying boolean to control if required the backend business logic
            required: false
            schema:
              type: boolean
              
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    task-id:
                      description: The identifier of the background task
                      type: string
                      example: "eeb37384-a2f5-40e5-8abe-a4bf0e66f2ea"
                    task-status:
                      description: The status of the background task
                      type: string
                      example: "Complete"
                    task-result:
                      $ref: "#/components/schemas/multi-items-digital-assets"

          "400":
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/error"
          "401":
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/error"
          "403":
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/error"
          "404":
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/error"
          "405":
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/error"
          "429":
            description: Too Many Requests
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/error"
          "500":
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/error"
          "502":
            description: Bad Gateway
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/error"
          "503":
            description: Service Not Available
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/error"
          "504":
            description: Gateway Timeout
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/error"
    
    
security:
  - api-key-auth: []

components:

  securitySchemes:
    api-key-auth:
      type: apiKey
      in: header
      name: x-Gateway-APIKey

  schemas:
      
    bulk-retrieve-response:
      type: object
      required:
        - task-id
      properties:
        task-id:
          description: Unique identifier of the background asynchronous task (assigned by the backend system)
          type: string
          
    multi-items-digital-assets:
      description: add here the description
      type: array
      items:
        $ref: "#/components/schemas/digital-assets"
        
    multi-items-sketches-digital-assets:
      description: add here the description
      type: array
      items:
        $ref: "#/components/schemas/sketches-digital-assets"
        
    multi-items-swatches-digital-assets:
      description: add here the description
      type: array
      items:
        $ref: "#/components/schemas/swatches-digital-assets"
        
    sketches-digital-assets:
      type: object
      description: object encapsulating properties of the digitial asset
      required:
        - item-type
        - item-id
        - href
        - brand
        - gender
        - assets
      properties:
        item-type:
          description: type of item identifier (generic, sku, style)
          type: string
          example: "SFC"
        item-id:
          description: Unique identifier of the sketch
          type: string
          example: "2WHGK03H"
        brand:
          $ref: "#/components/schemas/brand"
        gender:
          description: Gender the product item refers to
          type: string
          example: "M"
        asset-category:
          $ref: "#/components/schemas/asset-category"
        assets:
          description: Array of objets carrying the digital assets corresponding to the item
          type: array
          items:
            $ref: "#/components/schemas/sketches-assets"
            
    swatches-digital-assets:
      type: object
      description: object encapsulating properties of the digitial asset
      required:
        - item-type
        - item-id
        - href
        - brand
        - gender
        - assets
      properties:
        item-type:
          description: type of item identifier (generic, sku, style)
          type: string
          example: "SFC"
        item-id:
          description: Unique identifier of the sketch
          type: string
          example: "SM17Z-F8G8"
        brand:
          $ref: "#/components/schemas/brand"
        gender:
          description: Gender the product item refers to
          type: string
          example: "M"
        asset-category:
          $ref: "#/components/schemas/asset-category"
        assets:
          description: Array of objets carrying the digital assets corresponding to the item
          type: array
          items:
            $ref: "#/components/schemas/swatches-assets"
            
    digital-assets:
      type: object
      description: object encapsulating properties of the digitial asset
      required:
        - item-type
        - item-id
        - href
        - brand
        - gender
        - assets
      properties:
        item-type:
          description: type of item identifier (generic, sku, style-fabric-color)
          type: string
          example: "SFC"
        item-id:
          description: Unique identifier of the item
          type: string
          example: "2WHGK03H_T01QW_UC99"
        brand:
          $ref: "#/components/schemas/brand"
        gender:
          description: Gender the product item refers to
          type: string
          example: "M"
        asset-category:
          $ref: "#/components/schemas/asset-category"
        assets:
          description: Array of objets carrying the digital assets corresponding to the item
          type: array
          items:
            $ref: "#/components/schemas/assets"
        related-items:
          $ref: "#/components/schemas/related-items"
       
    
    related-items:
      type: object
      properties:
        sketches:
          type: array
          items:
            $ref: "#/components/schemas/sketch"
        swatches:
          type: array
          items:
            $ref: "#/components/schemas/swatch"
    
    sketch:
      type: object
      properties:
        sketch-id:
          type: string
          example: "3R2A6B"
        href:
          type: string
          format: uri
          example: "https://api.armani.it/digital-assets/v1/sketches/?style=3R2A6B"
          
    swatch:
      type: object
      properties:
        swatch-id:
          type: string
          example: "1JHSZ_0100"
        href:
          type: string
          format: uri
          example: "https://api.armani.it/digital-assets/v1/swatches/?fabric=1JHSZ&color=0100"
    
    asset-category:
      type: string
      enum:
        - sales
        - web
        - social
      example: web

    asset-type:
      type: string
      enum:
        - image
        - video
        - 3d
        - swatch
        - sketch

    assets:
      type: object
      properties:
        asset-type:
          allOf:
            - $ref: "#/components/schemas/asset-type"
          example: image
        classification:
          $ref: "#/components/schemas/classification"
        year:
          description: Year the product item belongs to
          type: string
          example: "2023"
        season:
          description: Season the product item belongs to
          type: string
          example: "SS"
        creation-date:
          type: string
          format: date-time
        last-change-date:
          type: string
          format: date-time
        mime-type:
          type: string
          enum:
          - image/png
          - image/jpeg
          - image/jpg
          - video/mp4
          - video/H263
          - video/H264
          - video/H265
        media-width:
          type: string
          example: "640px"
        media-height:
          type: string
          example: "640px"
        asset-size:
          description: size of the digital asset in bytes
          type: integer
          example: 543145
        asset-url:
          type: string
          format: uri
          example: "https://storage.googleapis.com/armani-pharm-dev/XYZ010XOI69%40001-1.jpg?x-goog-signature=168458700bc2615b258a2c47d3a397f57b6927c686ee3cbdaa732c15a02fd7d1f6bb54ec03b248e8e907425df6d3ff7d97b2f471c1da3f70c6c802d9ece91a67fae0df9ec53745fa8a0a0a0999066dc67699ddffcbdf149a21a153ea3c83f950cf459bdc929ada2d2820be00375d562a748ab9c6cce3b79957e0c84e054efca78d56e3965fdedab25df7f720f720a09bdc0155d77b9e7cd0859c5c7c19e1167043946f59eb9c78a3092ff8c2a8cdd5500cc2138e692f5f059e0c7ca48cea223f9e91c45496e221961c63cf19719c6b63eeb580d245044ccc5b85ada7c324732107bd9f16af7128f9582c068f1a0555a3f18ed30e2c99fd28e3b2176ddc558a1a&x-goog-algorithm=GOOG4-RSA-SHA256&x-goog-credential=axl-endpoints-calls%40armani-photolab-dev.iam.gserviceaccount.com%2F20220826%2Feurope-west8%2Fstorage%2Fgoog4_request&x-goog-date=20220826T145217Z&x-goog-expires=3600&x-goog-signedheaders=host"
        content-metadata:
          $ref: "#/components/schemas/content-metadata"

    sketches-assets:
      type: object
      properties:
        asset-type:
          allOf:
            - $ref: "#/components/schemas/asset-type"
          example: sketch
        classification:
          $ref: "#/components/schemas/classification"
        year:
          description: Year the product item belongs to
          type: string
          example: "2023"
        season:
          description: Season the product item belongs to
          type: string
          example: "SS"
        creation-date:
          type: string
          format: date-time
        last-change-date:
          type: string
          format: date-time
        mime-type:
          type: string
          enum:
          - image/png
          - image/jpeg
          - image/jpg
          - video/mp4
          - video/H263
          - video/H264
          - video/H265
        media-width:
          type: string
          example: "640px"
        media-height:
          type: string
          example: "640px"
        asset-size:
          description: size of the digital asset in bytes
          type: integer
          example: 543145
        asset-url:
          type: string
          format: uri
          example: "https://storage.googleapis.com/armani-pharm-dev/XYZ010XOI69%40001-1.jpg?x-goog-signature=168458700bc2615b258a2c47d3a397f57b6927c686ee3cbdaa732c15a02fd7d1f6bb54ec03b248e8e907425df6d3ff7d97b2f471c1da3f70c6c802d9ece91a67fae0df9ec53745fa8a0a0a0999066dc67699ddffcbdf149a21a153ea3c83f950cf459bdc929ada2d2820be00375d562a748ab9c6cce3b79957e0c84e054efca78d56e3965fdedab25df7f720f720a09bdc0155d77b9e7cd0859c5c7c19e1167043946f59eb9c78a3092ff8c2a8cdd5500cc2138e692f5f059e0c7ca48cea223f9e91c45496e221961c63cf19719c6b63eeb580d245044ccc5b85ada7c324732107bd9f16af7128f9582c068f1a0555a3f18ed30e2c99fd28e3b2176ddc558a1a&x-goog-algorithm=GOOG4-RSA-SHA256&x-goog-credential=axl-endpoints-calls%40armani-photolab-dev.iam.gserviceaccount.com%2F20220826%2Feurope-west8%2Fstorage%2Fgoog4_request&x-goog-date=20220826T145217Z&x-goog-expires=3600&x-goog-signedheaders=host"
        content-metadata:
          $ref: "#/components/schemas/content-metadata"
          
    swatches-assets:
      type: object
      properties:
        asset-type:
          allOf:
            - $ref: "#/components/schemas/asset-type"
          example: swatch
        classification:
          $ref: "#/components/schemas/classification"
        year:
          description: Year the product item belongs to
          type: string
          example: "2023"
        season:
          description: Season the product item belongs to
          type: string
          example: "SS"
        creation-date:
          type: string
          format: date-time
        last-change-date:
          type: string
          format: date-time
        mime-type:
          type: string
          enum:
          - image/png
          - image/jpeg
          - image/jpg
          - video/mp4
          - video/H263
          - video/H264
          - video/H265
        media-width:
          type: string
          example: "640px"
        media-height:
          type: string
          example: "640px"
        asset-size:
          description: size of the digital asset in bytes
          type: integer
          example: 543145
        asset-url:
          type: string
          format: uri
          example: "https://storage.googleapis.com/armani-pharm-dev/XYZ010XOI69%40001-1.jpg?x-goog-signature=168458700bc2615b258a2c47d3a397f57b6927c686ee3cbdaa732c15a02fd7d1f6bb54ec03b248e8e907425df6d3ff7d97b2f471c1da3f70c6c802d9ece91a67fae0df9ec53745fa8a0a0a0999066dc67699ddffcbdf149a21a153ea3c83f950cf459bdc929ada2d2820be00375d562a748ab9c6cce3b79957e0c84e054efca78d56e3965fdedab25df7f720f720a09bdc0155d77b9e7cd0859c5c7c19e1167043946f59eb9c78a3092ff8c2a8cdd5500cc2138e692f5f059e0c7ca48cea223f9e91c45496e221961c63cf19719c6b63eeb580d245044ccc5b85ada7c324732107bd9f16af7128f9582c068f1a0555a3f18ed30e2c99fd28e3b2176ddc558a1a&x-goog-algorithm=GOOG4-RSA-SHA256&x-goog-credential=axl-endpoints-calls%40armani-photolab-dev.iam.gserviceaccount.com%2F20220826%2Feurope-west8%2Fstorage%2Fgoog4_request&x-goog-date=20220826T145217Z&x-goog-expires=3600&x-goog-signedheaders=host"
        content-metadata:
          $ref: "#/components/schemas/content-metadata"

    style:
      type: string
      example: "6LSG03"
      
    fabric:
      type: string
      example: "SM17Z"
      
    color:
      type: string
      example: "F8G8"
    
    brand:
      type: string
      enum:
        - EA
        - EA7
        - AX
        - GA
      example: "GA"

    mime-type:
      type: string
      enum:
        - image/jpg
        - image/jpeg
        - image/png
        - video/mp4
    
    classification:
      type: string
      enum:
        - main
        - front
        - back
        - side
        - zoom
      example: main


    content-metadata:
      type: object
      properties:
        tag1:
          type: string
        tag2:
          type: string
        tag3:
          type: string  


    error:
      type: object
      properties:
        code:
          type: string
        reason:
          type: string
        message:
          type: string

    task-status:
      type: string
      enum:
        - Init
        - Waiting
        - In Progress
        - Failed
        - Complete

    unauthorized-error:
      type: object
      properties:
        code:
          type: string
          example: "401"
        reason:
          type: string
          example: "Not Authorized!"
        message:
          type: string
          example: Please check your authentication, api-key, basic auth, OAuth etc..."
          
    url-collection:
      type: object
      properties:
        brand:
          type: string
          enum:
            - GA
            - EA
            - EA7
            - AX
          example: "EA"
        year:
          type: string
        season:
          type: string
          enum:
            - SS
            - FW
          example: "SS"
        assets:
          type: array
          items:
            $ref: "#/components/schemas/asset-url"
            
    asset-url:
      type: object
      properties:
        item-id:
          description: identifier of the asset the url refers to (style-fabric-color)
          type: string
        url:
          description: publicly accessbile url
          type: string
          format: url
        record-creation-date:
          type: string
          format: datetime   

